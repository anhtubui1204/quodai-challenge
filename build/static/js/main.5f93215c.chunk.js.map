{"version":3,"sources":["layouts/Navbar/components/NotiList.jsx","utils/top5array.js","layouts/Navbar/components/NotiDropdown.jsx","layouts/Navbar/Navbar.js","layouts/Footer/Footer.js","actions/type.js","api/listApi.js","constants/url.js","actions/listAction.js","Helpers/WithLoading/WithLoadingComponent.js","pages/HomePage/components/Pagination.jsx","components/single-list-item/SingleListItem.jsx","actions/itemAction.js","pages/HomePage/components/ListComponent.jsx","pages/HomePage/HomePageContainer.js","pages/HighlightedListPage/components/HighlightedListComponent.jsx","pages/HighlightedListPage/HighlightedListPageContainer.js","routes.js","App.js","reportWebVitals.js","reducers/list.js","reducers/highlighted_items.js","reducers/index.js","index.js"],"names":["NotiList","notifications","SingleNotiItem","item","className","style","textOverflow","title","id","Fragment","length","map","index","top5array","array","sortKey","top5","sort","a","b","slice","NotiDropdown","highlighted_items","useSelector","state","top5issues","DropdownMenu","to","href","role","data-toggle","aria-haspopup","aria-expanded","color","fontSize","aria-labelledby","Navbar","Footer","GET_LIST","HIGHLIGHT_ITEMS","UNHIGHLIGHT_ITEMS","getListApi","page","query","fetch","response","json","alert","getListAction","dispatch","list","type","payload","WithLoadingComponent","loading","children","Spin","width","height","Pagination","setPage","onClick","SingleListItem","useDispatch","isHighlighted","find","element","onHandleHighlightItem","unHighlightAction","key","Date","highlightAction","ListComponent","DisplayList","HomePageContainer","useState","isLoading","setIsLoading","getList","useEffect","textAlign","HighlightedListComponent","IssuesList","HighlightedListPageContainer","routes","exact","path","component","HighlightedListContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","listReducer","action","itemsReducer","allIssues","finalList","filter","reducers","combineReducers","highlightedItemsReducer","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f93215c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//component for loading list of highlighted issues as notifications\r\nconst NotiList = ({ notifications }) => {\r\n\r\n    const SingleNotiItem = ({item}) => (\r\n        <li className=\"noti-box\">\r\n            <div className=\"row d-flex align-items-center\">\r\n                <div className=\"col-8 overflow-hidden\" style={{textOverflow: 'ellipsis'}}>\r\n                    <span>{item.title}</span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    ID: <strong>{item.id}</strong>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { notifications.length !== 0 ? (\r\n                notifications.map((item,index) => (\r\n                    <SingleNotiItem item={item} key={index}/>\r\n                ))\r\n            ) : (\r\n                <li className=\"noti-box no-noti\">\r\n                    <span>There is no highlighted item yet</span>\r\n                </li>\r\n            ) }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NotiList\r\n","const top5array = (array, sortKey='key') => {\r\n    var top5 = array.sort((a,b) => b[sortKey]-a[sortKey]).slice(0,5);\r\n    return top5\r\n}\r\n\r\nexport default top5array","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport NotiList from './NotiList'\r\nimport top5array from '../../../utils/top5array'\r\n\r\nconst NotiDropdown = () => {\r\n    // load highlighted issues from store\r\n    const highlighted_items = useSelector(state => state.highlighted_items)\r\n\r\n    // load top 5 items (sort by date-time of highlighting) \r\n    const top5issues = top5array(highlighted_items)\r\n\r\n    const DropdownMenu = () => (\r\n        <>\r\n            <li className=\"head\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <span>Notifications</span>\r\n                        {highlighted_items.length !== 0 && <Link to={\"/highlighted-issues\"} className=\"float-right\">View All</Link>}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <NotiList notifications={top5issues}/>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <a className=\"dropdown-toggle notification\" href=\"#\" role=\"button\" id=\"notiDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <span>\r\n                    <i className=\"fa fa-bell\" style={{ color: \"#68177B\", fontSize: \"18px\" }}></i>\r\n                </span>\r\n                {/* When there are 1 or more highlighted_issues, a badge will appear */}\r\n                {highlighted_items.length > 0 && <span className=\"badge\"></span>}\r\n            </a>\r\n\r\n            <ul className=\"dropdown-menu\" aria-labelledby=\"notiDropdown\">\r\n                <DropdownMenu/>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotiDropdown\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css'\r\nimport NotiDropdown from './components/NotiDropdown';\r\n\r\n//navigation bar\r\nconst Navbar = () => {\r\n    return (\r\n        <div id=\"header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to={\"/\"}>GitLinks</Link>\r\n                    <NotiDropdown/>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id=\"footer\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","//Action Types\r\nexport const GET_LIST = \"GET_LIST\"\r\n\r\nexport const HIGHLIGHT_ITEMS = \"HIGHLIGHT_ITEMS\"\r\nexport const UNHIGHLIGHT_ITEMS = \"UNHIGHLIGHT_ITEMS\"","import { getListURL } from '../constants/url';\r\n\r\n//api for getting issues from given api\r\nexport const getListApi = async (page) => {\r\n    const query = `?page=${page}&per_page=5` //query by page number and number of issues per page\r\n    try{\r\n        const response = await fetch(getListURL + query);\r\n        const json = response.json();\r\n\r\n        return json;\r\n\r\n    } catch(err) {\r\n        alert(err)\r\n    }\r\n\r\n}","export const getListURL = 'https://api.github.com/repos/rails/rails/issues'","import { GET_LIST } from './type'\r\nimport { getListApi } from '../api/listApi'\r\n\r\n//action for getting list from api\r\nexport const getListAction = (page) => async dispatch => {\r\n    const list = await getListApi(page)\r\n    dispatch({\r\n        type: GET_LIST,\r\n        payload: list\r\n    })\r\n}\r\n","import React from 'react'\r\nimport './with-loading.css'\r\n\r\n//component for handling loading spinner\r\nconst WithLoadingComponent = ({ loading, children}) => {\r\n\r\n    const Spin = () => <div className=\"loading text-center\">\r\n        <div className=\"spinner-border\" style={{width: \"3rem\", height: \"3rem\"}} role=\"status\">\r\n        </div>\r\n    </div>\r\n\r\n    return (\r\n        <>\r\n            {/* if loading is true then trigger spinner, else render the children component */}\r\n            { loading ? (\r\n                <Spin/>\r\n            ) : children }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WithLoadingComponent\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ page, setPage }) => {\r\n    //switch to previous page\r\n    const onHandleClickPrev = () => {\r\n        if(page === 1) return;\r\n        else setPage(page-1)\r\n    };\r\n\r\n    //switch to next page\r\n    const onHandleClickNext = () => {\r\n        setPage(page+1)\r\n    };\r\n\r\n    return (\r\n        <div id=\"pagination\" className=\"btn-group mt-3\" role=\"group\">\r\n            {page !== 1 && (\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={onHandleClickPrev}>\r\n                    Previous\r\n                </button>\r\n            )}\r\n            <button type=\"button\" className=\"btn btn-warning\" onClick={onHandleClickNext}>\r\n                Next\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './single-list-item.css'\r\n\r\nimport { highlightAction, unHighlightAction } from '../../actions/itemAction'\r\n\r\nconst SingleListItem = ({ item }) => {\r\n    //initialize dispatch function\r\n    const dispatch = useDispatch()\r\n\r\n    //get highlighted items from store\r\n    const highlighted_items = useSelector(state => state.highlighted_items)\r\n\r\n    //function to check if current item is highlighted\r\n    const checkIsHighlighted = () => {\r\n        //match id in highlighted issues list\r\n        const found = highlighted_items.find(element => element.id === item.id)\r\n        if(found) {\r\n            return true;\r\n        } else {\r\n            return false ;\r\n        }\r\n    }\r\n    const isHighlighted = checkIsHighlighted();\r\n\r\n    //handle highlight action - if current issue is already highlighted, then unhighlight it;\r\n    //else add item to highlighted issues list\r\n    const onHandleHighlightItem = () => {\r\n        if(isHighlighted) {\r\n            dispatch(unHighlightAction(item))\r\n        } else {\r\n            dispatch(highlightAction(item))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li\r\n            onClick={() => onHandleHighlightItem()}\r\n            className={`list-group-item ${isHighlighted ? 'highlight-item' : 'list-group-item-action'}`}\r\n            style={{ color: \"black\" }}\r\n        >\r\n            <div className=\"d-flex w-100 justify-content-between \">\r\n                <h5 className=\"item-title\">{item.title}</h5>\r\n                <small className=\"item-id\">ID: <strong>{item.id}</strong></small>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SingleListItem\r\n","import { HIGHLIGHT_ITEMS, UNHIGHLIGHT_ITEMS } from './type'\r\n\r\n//action for highlighting issue\r\nexport const highlightAction = (item) => dispatch => {\r\n    dispatch({\r\n        type: HIGHLIGHT_ITEMS,\r\n        payload: {\r\n            ...item, \r\n            key: new Date() //create key field as current date-time\r\n        }\r\n    })\r\n}\r\n\r\n//action for unhighlighting issue\r\nexport const unHighlightAction = (item) => dispatch => {\r\n    dispatch({\r\n        type: UNHIGHLIGHT_ITEMS,\r\n        payload: item\r\n    })\r\n}","import React from \"react\";\r\nimport SingleListItem from '../../../components/single-list-item/SingleListItem'\r\n\r\n//handle list of issues\r\nconst ListComponent = ({ list }) => {\r\n\r\n    const DisplayList = () => {\r\n        return list.length !== 0 ? (\r\n            <ul className=\"list-group\">\r\n                {list.map((item,index) => <SingleListItem item={item} key={index} />)}\r\n            </ul>\r\n        ) : <p className=\"no-item\">There is no item yet</p>\r\n    }\r\n\r\n    return (\r\n        <div id=\"list-section\">\r\n            <DisplayList/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListComponent;\r\n","import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport './homepage.css'\r\nimport { getListAction } from '../../actions/listAction'\r\n\r\nimport WithLoading from '../../Helpers/WithLoading/WithLoadingComponent';\r\nimport Pagination from './components/Pagination';\r\nimport ListComponent from './components/ListComponent';\r\n\r\nconst HomePageContainer = () => {\r\n    //initialize dispatch function\r\n    const dispatch = useDispatch()\r\n\r\n    //define states\r\n    const [page, setPage] = useState(1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    //get list from redux store\r\n    const list = useSelector(state => state.list)\r\n\r\n    //get list function\r\n    const getList = async (page) => {\r\n        setIsLoading(true)\r\n        await dispatch(getListAction(page))\r\n        setIsLoading(false)\r\n    }\r\n    \r\n    //rerender component once page changes\r\n    useEffect(()=>{\r\n        getList(page)\r\n    },[page])\r\n\r\n    return (\r\n        <div id=\"homepage\">\r\n            <div className=\"container\">\r\n                <h1 style={{textAlign:\"center\"}}>Issues</h1>\r\n                <div id=\"page-section\">\r\n                    <h5>Page: {page}</h5>\r\n                </div>\r\n                <WithLoading loading={isLoading}>\r\n                    <ListComponent list={list} />\r\n                </WithLoading>\r\n                <Pagination page={page} setPage={setPage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePageContainer\r\n","import React from 'react'\r\n\r\n//handle list of highlighted issues\r\nconst HighlightedListComponent = ({list}) => {\r\n\r\n    const IssuesList = () => {\r\n        return list.length !== 0 ? (\r\n            <ul className=\"list-group\">\r\n                {list.map((item,index) => (\r\n                    <li key={index} className=\"list-group-item text-dark\">\r\n                        <div className=\"d-flex w-100 justify-content-between \">\r\n                            <h5 className=\"item-title\">{item.title}</h5>\r\n                            <small className=\"item-id\">ID: <strong>{item.id}</strong></small>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        ) : <p className=\"no-item\">There is no highlighted issue yet</p>\r\n    }\r\n\r\n    return (\r\n        <div id=\"highlighted-issues-section\">\r\n            <IssuesList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HighlightedListComponent\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport HighlightedListComponent from './components/HighlightedListComponent'\r\nimport './highlighted-list.css'\r\n\r\nconst HighlightedListPageContainer = () => {\r\n    //load highlighted issues from store\r\n    const highlighted_items = useSelector(state => state.highlighted_items)\r\n\r\n    return (\r\n        <div id=\"highlighted-list\">\r\n            <div className=\"container\">\r\n                <h1 style={{textAlign:\"center\"}}>Highlighted Issues</h1>\r\n                <HighlightedListComponent list={highlighted_items}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HighlightedListPageContainer\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport HomePageContainer from './pages/HomePage/HomePageContainer';\r\nimport HighlightedListContainer from './pages/HighlightedListPage/HighlightedListPageContainer'\r\n\r\nconst routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={\"/\"} component={HomePageContainer}/>\r\n            <Route exact path={\"/highlighted-issues\"} component={HighlightedListContainer}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default routes\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './layouts/Navbar/Navbar';\nimport Footer from './layouts/Footer/Footer';\nimport RouteURL from './routes';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <RouteURL/>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_LIST } from '../actions/type'\r\n\r\nconst initialState = []\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_LIST:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default listReducer;","import { HIGHLIGHT_ITEMS, UNHIGHLIGHT_ITEMS } from '../actions/type'\r\n\r\nconst initialState = []\r\n\r\nconst itemsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case HIGHLIGHT_ITEMS:\r\n            const allIssues = [...state, action.payload] //add payload to current state\r\n            return allIssues;\r\n        case UNHIGHLIGHT_ITEMS:\r\n            //remove issue from current highlighted issues list\r\n            const finalList = state.filter(item => item.id !== action.payload.id)\r\n            return finalList;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default itemsReducer;","import listReducer from './list';\r\nimport highlightedItemsReducer from './highlighted_items'\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst reducers = combineReducers({\r\n    list: listReducer,\r\n    highlighted_items: highlightedItemsReducer\r\n})\r\n\r\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from  'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers'\n\n// initialState\nconst initialState = {}\n\n//define middleware\nconst middleware = [thunk]\n\n// Create store\nconst store = createStore(\n  reducers,\n  initialState,\n  compose(applyMiddleware(...middleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}